@model Recetario.Areas.Administradores.Models.ActorDTO
@using Microsoft.AspNetCore.Identity
@using Recetario.BaseDatos
<!--Necesitamos la dependencia de usuarios, por que necesitamos el claim que
    contiene su Rol
    Por cierto, los dos using de arriba son con el mismo propósito
    UserManager se encuentra en la API Identity-->
@inject UserManager<Actor> UserManager

@{
    ViewData["Title"] = "Editar Admin";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //TODO: Los nombres de usuario se debería de modificar??????
}

@if (User.Identity.IsAuthenticated)
{
    <h1>Editar Administrador</h1>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Editar">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="IdActor" />
                <input type="hidden" asp-for="Tipo" />
                <div class="form-group">
                    <label asp-for="NombreActor" class="control-label"></label>
                    <input asp-for="NombreActor" class="form-control" />
                    <span asp-validation-for="NombreActor" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="FechaNac" class="control-label"></label>
                    <input asp-for="FechaNac" class="form-control" />
                    <span asp-validation-for="FechaNac" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Usuario" class="control-label"></label>
                    <input asp-for="Usuario" class="form-control" />
                    <span asp-validation-for="Usuario" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Contrasena" class="control-label"></label>
                    <input asp-for="Contrasena" class="form-control" />
                    <span asp-validation-for="Contrasena" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="control-label"></label>
                    <input asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Confirmar" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index" asp-route-rol="@UserManager.GetClaimsAsync(UserManager.FindByIdAsync(Model.IdActor.ToString()).Result).Result.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Role).Value">Regresar a la lista</a>
    </div>
}
else
{
    <h4>Área restringida para administradores. Inicia sesión como administrador para hacer uso de ella</h4>
}
